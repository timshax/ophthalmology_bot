from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from database import find_patient_by_username, update_patient_chat_id, get_all_patients
from config import MESSAGE_TEMPLATES

router = Router()



def get_main_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")],
            [KeyboardButton(text="üìÖ –ë–ª–∏–∂–∞–π—à–∏–π –≤–∏–∑–∏—Ç")],
            [KeyboardButton(text="‚ÑπÔ∏è –û–±—É—á–µ–Ω–∏–µ")],
            [KeyboardButton(text="üë• –ê–¥–º–∏–Ω: –°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤")]
        ],
        resize_keyboard=True
    )
    print("üîÑ –°–æ–∑–¥–∞–Ω–∞ –≥–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    return keyboard


def get_registration_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")]
        ],
        resize_keyboard=True
    )
    print("üîÑ –°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    return keyboard


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    username = message.from_user.username
    print(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å username: {username}")

    if not username:
        keyboard = get_registration_keyboard()
        print("‚ùå Username –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        await message.answer(
            "‚ùå –£ –≤–∞—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω username –≤ Telegram. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=keyboard
        )
        return

    telegram_username = f"@{username}"
    patient = await find_patient_by_username(telegram_username)

    if patient:
        await update_patient_chat_id(patient['id'], message.chat.id)

        keyboard = get_main_keyboard()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {patient['full_name']} –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞—é –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")

        await message.answer(
            f"‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {patient['full_name']}!\n"
            f"–Ø –≤–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –≤–∏–∑–∏—Ç–∞—Ö –∫ –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥—É.",
            reply_markup=keyboard
        )
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è {patient['full_name']}")
    else:
        all_patients = await get_all_patients()
        available_usernames = [p.get('telegram_username', '–Ω–µ —É–∫–∞–∑–∞–Ω') for p in all_patients]

        keyboard = get_registration_keyboard()
        print(f"‚ùå Username {telegram_username} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")

        await message.answer(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.\n\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ username –≤ –±–∞–∑–µ:\n" + "\n".join(available_usernames) + "\n\n"
                                                                               "–ï—Å–ª–∏ –≤—ã –ø–∞—Ü–∏–µ–Ω—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º—É.",
            reply_markup=keyboard
        )


@router.message(lambda message: message.text == "üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def register_again(message: types.Message):
    """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    await cmd_start(message)


@router.message(Command("test_keyboard"))
async def cmd_test_keyboard(message: types.Message):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
    keyboard = get_main_keyboard()
    await message.answer(
        "–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –∫–Ω–æ–ø–∫–∏:",
        reply_markup=keyboard
    )


@router.message(Command("debug"))
async def cmd_debug(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
    username = message.from_user.username
    all_patients = await get_all_patients()
    current_patient = await find_patient_by_username(f"@{username}") if username else None

    debug_info = (
        f"üë§ –í–∞—à username: @{username if username else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n"
        f"üîç –í–∞—à chat_id: {message.chat.id}\n"
        f"üìä –í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {len(all_patients)}\n"
        f"‚úÖ –í—ã –≤ –±–∞–∑–µ: {'–î–ê' if current_patient else '–ù–ï–¢'}\n"
        f"üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ username:\n"
    )

    for patient in all_patients:
        status = "‚úÖ" if patient.get('chat_id') else "‚ùå"
        debug_info += f"{status} {patient.get('telegram_username', '–Ω–µ —É–∫–∞–∑–∞–Ω')} - {patient['full_name']}\n"

    await message.answer(debug_info)